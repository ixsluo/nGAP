!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACSF_type	gap_module.f90	/^TYPE ACSF_type$/;"	t	subroutine:CAR2ACSF
BINPATH	makefile	/^BINPATH=.\/$/;"	m
CAR2ACSF	gap_module.f90	/^SUBROUTINE CAR2ACSF(/;"	s	subroutine:FCAR2WACSF
CART2FRAC	relax_module.f90	/^SUBROUTINE  CART2FRAC(/;"	s	module:relax_module
COEFF	gap_module.f90	/^double precision, allocatable, dimension(:)                :: COEFF /;"	v	module:gap_module
Det	gap_module.f90	/^FUNCTION    Det(/;"	f	module:gap_module
EXEC	makefile	/^EXEC = relax.x$/;"	m
EXTSTRESS	main.f90	/^double precision, dimension(6)                  :: EXTSTRESS$/;"	v	program:test_relax
FC	makefile	/^FC = ifort -CA -CU -CB  -traceback -I \/opt\/intel\/mkl\/include$/;"	m
FCAR2WACSF	gap_module.f90	/^SUBROUTINE  FCAR2WACSF(/;"	s	module:gap_module
FGAP_CALC	gap_module.f90	/^SUBROUTINE  FGAP_CALC(/;"	s	module:gap_module
FGAP_INIT	gap_module.f90	/^SUBROUTINE  FGAP_INIT(/;"	s	module:gap_module
FLAGS	makefile	/^FLAGS =  -fopenmp  -c$/;"	m
FRAC2CART	relax_module.f90	/^SUBROUTINE  FRAC2CART(/;"	s	module:relax_module
GET_COV	gap_module.f90	/^SUBROUTINE  GET_COV(/;"	s	module:gap_module
GPa2eVPang	gap_module.f90	/^double precision,parameter                                 :: GPa2eVPang /;"	v	module:gap_module
LAT	read_module.f90	/^double precision, DIMENSION(3,3)                :: LAT$/;"	v	module:read_module
LIB_MKL_ROOT	makefile	/^LIB_MKL_ROOT=\/opt\/intel\/mkl\/lib\/intel64$/;"	m
MKLLIBS	makefile	/^MKLLIBS= -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -lmkl_lapack95_lp64 -lmkl_blas95_lp64 -liomp5 -lpthread$/;"	m
MM	gap_module.f90	/^double precision, allocatable, dimension(:,:)              :: MM /;"	v	module:gap_module
NA	read_module.f90	/^INTEGER                                         :: NA$/;"	v	module:read_module
POS	read_module.f90	/^double precision, ALLOCATABLE, DIMENSION(:,:)   :: POS$/;"	v	module:read_module
QMM	gap_module.f90	/^double precision, allocatable, dimension(:,:)              :: QMM /;"	v	module:gap_module
READ_GAP	read_module.f90	/^SUBROUTINE READ_GAP(/;"	s	module:read_module
READ_POSCAR	read_module.f90	/^SUBROUTINE  READ_POSCAR(/;"	s	module:read_module
Rcut	gap_module.f90	/^double precision                                           :: Rcut$/;"	v	module:gap_module
SET_ELEMENTS	gap_module.f90	/^SUBROUTINE  SET_ELEMENTS(/;"	s	module:gap_module
SF	gap_module.f90	/^TYPE SF$/;"	t	subroutine:CAR2ACSF
SPECIES	read_module.f90	/^INTEGER, ALLOCATABLE, DIMENSION(:)              :: SPECIES$/;"	v	module:read_module
THETA	gap_module.f90	/^double precision, allocatable, dimension(:)                :: THETA /;"	v	module:gap_module
alpha	gap_module.f90	/^REAL(8)                                      :: alpha$/;"	k	type:SF
at_	gap_module.f90	/^type(Structure)                                            :: at_$/;"	v	module:gap_module
atsym	gap_module.f90	/^character(len=2), save                                     :: atsym(/;"	v	module:gap_module
celldrv	celldrv.f90	/^  subroutine celldrv(/;"	s
ckm	gap_module.f90	/^    double precision,allocatable,dimension(:,:)            :: ckm /;"	v	module:gap_module
covf	gap_module.f90	/^    double precision,allocatable,dimension(:)              :: covf /;"	v	module:gap_module
crossp	gap_module.f90	/^function crossp(/;"	f	subroutine:FCAR2WACSF
cutoff	gap_module.f90	/^REAL(8)                                      :: cutoff$/;"	k	type:SF
dedg	gap_module.f90	/^    double precision,allocatable,dimension(:,:)            :: dedg /;"	v	module:gap_module
delta	gap_module.f90	/^double precision,parameter                                 :: delta /;"	v	module:gap_module
des_len	gap_module.f90	/^integer                                                    :: des_len$/;"	v	module:gap_module
dkdg	gap_module.f90	/^    double precision,allocatable,dimension(:,:)            :: dkdg /;"	v	module:gap_module
dxdy	gap_module.f90	/^    double precision,allocatable,dimension(:,:,:,:)        :: dxdy /;"	v	module:gap_module
e	gap_module.f90	/^    double /;"	v	module:gap_module
energy_cal	gap_module.f90	/^    double precision                                       :: energy_ref, energy_cal$/;"	v	module:gap_module
energy_ref	gap_module.f90	/^    double precision                                       :: energy_ref,/;"	v	module:gap_module
force_cal	gap_module.f90	/^    double precision,allocatable,dimension(:,:)            :: force_ref, force_cal$/;"	v	module:gap_module
force_ref	gap_module.f90	/^    double precision,allocatable,dimension(:,:)            :: force_ref,/;"	v	module:gap_module
gap_dev	gap_module.f90	/^double precision,allocatable,dimension(:,:)                :: gap_dev$/;"	v	module:gap_module
gap_elements	gap_module.f90	/^integer,         allocatable,dimension(:)                  :: gap_elements$/;"	v	module:gap_module
gap_energy	gap_module.f90	/^double precision                                           :: gap_energy,/;"	v	module:gap_module
gap_lat	gap_module.f90	/^double precision,            dimension(3,3)                :: gap_lat$/;"	v	module:gap_module
gap_module	gap_module.f90	/^MODULE gap_module$/;"	m
gap_natoms	gap_module.f90	/^integer,         allocatable,dimension(:)                  :: gap_natoms$/;"	v	module:gap_module
gap_species	gap_module.f90	/^character(2),    allocatable,dimension(:)                  :: gap_species$/;"	v	module:gap_module
gap_stress	gap_module.f90	/^double precision,            dimension(6)                  :: gap_stress$/;"	v	module:gap_module
gap_variance	gap_module.f90	/^double precision                                           :: gap_energy, gap_variance,/;"	v	module:gap_module
gap_volume	gap_module.f90	/^double precision                                           :: gap_energy, gap_variance, gap_volume$/;"	v	module:gap_module
gap_xyz	gap_module.f90	/^double precision,allocatable,dimension(:,:)                :: gap_xyz$/;"	v	module:gap_module
global_cutoff	gap_module.f90	/^REAL(8)                                      :: global_cutoff$/;"	k	type:ACSF_type
kk	gap_module.f90	/^    double precision,allocatable,dimension(:,:)            :: kk /;"	v	module:gap_module
lat	gap_module.f90	/^    double precision,            dimension(3,3)            :: lat$/;"	v	module:gap_module
lat2matrix	relax_module.f90	/^subroutine lat2matrix(/;"	s	module:relax_module
lat_inv	relax_module.f90	/^subroutine lat_inv(/;"	s	module:relax_module
lgrad	gap_module.f90	/^logical                                                    :: lgrad$/;"	v	module:gap_module
lower	relax_module.f90	/^subroutine lower(/;"	s	module:relax_module
matrix_inversion	matinv.f90	/^  subroutine matrix_inversion(/;"	s
maxele	gap_module.f90	/^integer, parameter                                         :: maxele /;"	v	module:gap_module
mxm1	matinv.f90	/^  subroutine mxm1(/;"	s
mxm2	matinv.f90	/^  subroutine mxm2(/;"	s
na	gap_module.f90	/^    integer                                                :: na$/;"	v	module:gap_module
nsf	gap_module.f90	/^INTEGER                                      :: nsf$/;"	k	type:ACSF_type
nsparseX	gap_module.f90	/^integer                                                    :: nsparseX$/;"	v	module:gap_module
ntype	gap_module.f90	/^    integer                                                :: ntype$/;"	v	module:gap_module
ntype	gap_module.f90	/^INTEGER                                      :: ntype$/;"	k	type:SF
obj	makefile	/^obj =  read_module.o gap_module.o  matinv.o setcellderv.o celldrv.o relax_module.o main.o$/;"	m
read_module	read_module.f90	/^module read_module$/;"	m
recipvector	gap_module.f90	/^function recipvector(/;"	f	subroutine:FCAR2WACSF
relax_main	relax_module.f90	/^SUBROUTINE  relax_main(/;"	s	module:relax_module
relax_module	relax_module.f90	/^module relax_module$/;"	m
relaxv2struct	relax_module.f90	/^SUBROUTINE  relaxv2struct(/;"	s	module:relax_module
setcellderv3D	setcellderv.f90	/^  subroutine setcellderv3D(/;"	s
sf	gap_module.f90	/^type(SF),dimension(:),allocatable            :: sf$/;"	k	type:ACSF_type
stress_cal	gap_module.f90	/^    double precision,dimension(6)                          :: stress_ref, stress_cal$/;"	v	module:gap_module
stress_ref	gap_module.f90	/^    double precision,dimension(6)                          :: stress_ref,/;"	v	module:gap_module
strs	gap_module.f90	/^    double precision,allocatable,dimension(:,:,:,:)        :: strs /;"	v	module:gap_module
struct2relaxv	relax_module.f90	/^SUBROUTINE  struct2relaxv(/;"	s	module:relax_module
test_relax	main.f90	/^Program  test_relax$/;"	p
types	gap_module.f90	/^    double precision,allocatable,dimension(:)              :: types$/;"	v	module:gap_module
upper	relax_module.f90	/^subroutine upper(/;"	s	module:relax_module
vectorlength	gap_module.f90	/^function vectorlength(/;"	f	subroutine:FCAR2WACSF
volume	gap_module.f90	/^    double precision                                       :: volume$/;"	v	module:gap_module
volume	gap_module.f90	/^function volume(/;"	f	subroutine:FCAR2WACSF
write_array_2dim	gap_module.f90	/^SUBROUTINE  write_array_2dim(/;"	s	module:gap_module
xx	gap_module.f90	/^    double precision,allocatable,dimension(:,:)            :: xx /;"	v	module:gap_module
xyz	gap_module.f90	/^    double precision,allocatable,dimension(:,:)            :: xyz$/;"	v	module:gap_module
